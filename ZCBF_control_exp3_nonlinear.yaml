#----------------------------
# Description of scenario
#
# Apply ZCBF results to ACC sims: 
# - pre-defined ZCBF parameters are now updated
# - cont. time
# - computed torque nominal control


#-----------------------------
# ZCBF Simulation Parameters

#---------------
# Constraint sets (for transformed constraints)
q_max: [1.6, 2.5] 
q_min: [-1.4, 1.7]
v_max: [1.5, 1.5]
v_min: [-1.5, -1.5]
u_max: [18.0, 10.0] 
u_min: [-18.0, -10.0]

#--------------
# Constraint params

nonlinear_params:
  kh: 0.0
  qt_max: [1.5707963267948966, 2.617993877991494] 
  qt_min: [-1.5707963267948966, 1.5707963267948966]
  constraint0: 
    # type: 'ellipsoid'
    # params:
    #   a: -1.0
    #   P: [-0.4, 0.0 , 0.0, -0.4] # nxn matrix flattened into list
    #   qr: [8.0, 0.0]  # center of ellipsoid
    type: 'planar'
    params:
      a: 0.0
      P: [0.0, 0.0 , 0.0, 0.0] # nxn matrix flattened into list
      qr: [1.0, 0.05]  # center of ellipsoid
  constraint1: 
    type: 'planar'
    params:
      a: 0.0
      P: [0.0, 0.0 , 0.0, 0.0] # nxn matrix flattened into list
      qr: [0.05, 1.0]  # center of ellipsoid

#---------------
# System Dynamic parameters
m_list: [1.0, 1.0]   # link masses (kg)
l_list: [1.0, 1.0]   # link lengths(m)   
f_list: [0.001, 0.001] #damping friction term
grav: 0.0
km2: 3.844285855764477 # was 5.02176
kc: 1.5000000000000002 
kg: 0.0
c3: 2.077238998061857 # Lipschitz constant of inv(M(q))
c1: 7.980555671725218  # Lipschitz constant of inv(M(q))*( -Cv - Fv - g ) **Notoriously long to compute**
c5: 78.35686363636364  # Upper bound of dynamics i.e. ||inv(M)(q)*(- Cv - Fv - g u)||_infty
dq_bounds: 0.1         # Step size used in two_dof_dynamics_bounds.main to compute the above dynamic bounds (for q)
dv_bounds: 0.1         # Step size used in two_dof_dynamics_bounds.main to compute the above dynamic bounds (for v)

#---------------
# Define nominal control type (only supports ComputedTorque or PD)
nom_control: 'ComputedTorque' #(only supports ComputedTorque or PD)
cont_type: 'ZCBF_control' #'nom_control' #    'nom_control' # nom_control: only implement nominal control, ZCBF_contol: implement ZCBF_controller for cont time, ZCBF_control_sampled: implement sampled-data controller

#---------------
# Reference trajectory for nominal controller
ref:
  # pi/2 + 1.9
  r0_amp: 1.5
  r0_omega: 0.5
  # (q_max[1]-q_min[1])/2.0 + 2.1
  r1_amp: -0.5
  r1_omega: 1.0
  # (q_max[1]-q_min[1])/2.0 + q_min[1]
  r1_b: 2.0943951023931953
gains:
  Kp: 5.0
  Kv: 5.0

# #---------------
# # Reference trajectory for nominal controller
# ref:
#   # pi/2 + 1.9
#   r0_amp: 3.4707963267948965
#   r0_omega: 1.3
#   # (q_max[1]-q_min[1])/2.0 + 2.1
#   r1_amp: 2.6235987755982987
#   r1_omega: 1.3
#   # (q_max[1]-q_min[1])/2.0 + q_min[1]
#   r1_b: 2.0943951023931953
# gains:
#   Kp: 5.0
#   Kv: 5.0

#---------------
# Initial ZCBF parameters
gamma: 2.0
nu: 10.0
delta: 0.01 
eta_bar: 7.0
alpha: 'atan'
beta: 'cubic'
compute_zcbf: True  # If true, new safe-by-design zcbf parameters are computed, otherwise not
dq: 0.01             # Defines resolution for grid search when computing zcbf parameters
eps_frac: 0.5       # Fraction of the maximum epsilon to use. The maximum epsilon is the one that satisfies Assumption 1 (from paper)
nu_frac: 1.0        # Fraction of nu to use if original nu listed here is not within the ZCBF parameter range


#---------------
# ODE parameters

# Initial conditions
#    [(q_max[0]-q_min[0])/2.0 + q_min[0], (q_max[1]-q_min[1])/2.0 + q_min[1]]
q0: [ 0.0, 2.09439510239 ]
v0: [0.0, 0.0]
T_sim: 15.0   # Simulation end time (s)
N_sim: 1000   # Number of data points from t = 0 to t = T_sim (must be an int)
sim_control: 'discrete_time'  # only options: 'cont_time' for continuous time control or 'discrete_time' for sampled-data control
T_sample: 0.001 #(only used) if sim_control = 'discrete_time'